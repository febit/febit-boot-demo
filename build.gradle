plugins {
  alias libs.plugins.febit.java
  alias libs.plugins.febit.maven.publish
  alias libs.plugins.febit.codegen.module
  alias libs.plugins.license

  alias libs.plugins.spring.boot apply false
}

ext {
}

group = 'org.febit.boot.demo'
version = '1.0.0-SNAPSHOT'

allprojects {
  apply plugin: 'com.github.hierynomus.license'

  codegenModule {
    defaultTemplate = fromFile("$rootDir/etc/module.java.tmpl")
  }

  license {
    mapping {
      java = 'SLASHSTAR_STYLE'
    }
    include '**/*.java'
    exclude '**/jmodel/**/*.java'
    ignoreFailures = true
    strictCheck = false
    skipExistingHeaders = false
    header = rootProject.file('etc/license-header.txt')
  }
}

subprojects {
  apply plugin: 'java'

  java {
    sourceCompatibility = JavaVersion.VERSION_21
    targetCompatibility = JavaVersion.VERSION_21
  }

  group = rootProject.group
  version = rootProject.version

  lombok {
    version = libs.versions.lombok
  }

  licenseMain {
    mustRunAfter generateModule
  }

  repositories {
    mavenCentral()
    // maven { url = "https://oss.sonatype.org/content/repositories/snapshots" }
  }

  test {
    useJUnitPlatform()
    include '**/*Test.class'
    // Exclude Integration Testing
    exclude '**/*IT.class'
  }

  jacocoTestReport {
    afterEvaluate {
      getClassDirectories().setFrom(
          classDirectories.files.collect {
            fileTree(dir: it,
                exclude: ['**/jmodel/**'])
          }
      )
    }
  }

  dependencies {
    implementation(platform(libs.febit.commons.deps))
    implementation(platform(libs.febit.boot.deps))

    compileOnly 'org.febit:febit-annotations-optional'
    testCompileOnly 'org.febit:febit-annotations-optional'

    testImplementation 'org.febit:febit-commons-test'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
  }
}
