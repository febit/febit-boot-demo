plugins {
  id "org.springframework.boot"
  id 'org.febit.boot.flyway'
  id 'org.febit.boot.jooq'
}

version '1.0.0-SNAPSHOT'

def PKG = "org.febit.boot.demo.doggy"

springBoot {
  mainClass.set "${PKG}.DoggyApplication"
}

bootRun {
  systemProperties System.properties
}

bootJar {
  archiveFileName = "${project.name}.jar"
}

codegenModule {
  module "${PKG}.DoggyApiVersion"
}

test {
  useJUnitPlatform()
  include '**/*Test.class'
  // Exclude Integration Testing
  exclude '**/*IT.class'
}

febitFlyway {
  // excludeTask '.*-(baseline|undo|repair)-.*'
  excludeTask '.*-(prod|pre|uat|unit-test)'
}

codegenJooq {
  def MODEL_PKG = "${PKG}.model"

  embeddedPostgres()

  schema = 'doggy'
  targetPackage = "${PKG}.jmodel"
  generate {
    springAnnotations = true
  }
  forcedTypes {
    timeToInstant()
    mapping([
        t_doggy: [
            breed : "enum: ${MODEL_PKG}.doggy.DoggyBreed",
            gender: "enum: ${MODEL_PKG}.doggy.DoggyGender",
        ]
    ])
  }
}

dependencies {
  implementation 'org.febit:febit-lang'

  implementation 'org.febit.boot:febit-boot-starter-webmvc'
  implementation 'org.febit.boot:febit-boot-starter-web-auth'
  implementation 'org.febit.boot:febit-boot-starter-jooq'
  implementation 'org.springframework.boot:spring-boot-starter-actuator'

  runtimeOnly 'org.flywaydb:flyway-core'
  runtimeOnly 'com.h2database:h2'
  runtimeOnly 'org.postgresql:postgresql'

  codegenJooq 'org.slf4j:slf4j-simple'

  testRuntimeOnly 'com.h2database:h2'
  testImplementation 'org.springframework.boot:spring-boot-starter-test'
}
